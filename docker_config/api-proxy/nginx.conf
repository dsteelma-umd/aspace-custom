events {
  worker_connections 1024;
}

http {
  server {
    listen 8083;

    # Return a "ping" response for readiness/liveness checks
    # This does not require authentication or headers
    location = /ping {
      default_type text/html;
      return 200 "<!DOCTYPE html><h2>api-proxy OK</h2></html>";
    }

    # Case insensitive regular expression location match to login endpoint
    # Calls to this endpoint do not require an "X-ArchivesSpace-Session"
    # header.
    location ~* /users/(.*)/login {
      # Need to use $is_args$args because we are using regular expression
      # matching, so any query parameters are not sent automatically.
      #
      # Sending the query parameters is necessary because ArchivesSnake
      # (https://github.com/archivesspace-labs/ArchivesSnake) submits a POST
      # request for /users/jsmith/login, but puts the parameters in the URL
      # instead of in the POST message body, so the submitted URL looks like
      # /users/jsmith/login?password=XXXXX&expiring=False
      #
      # While it is arguably bad form for the password to be sent in HTTP
      # query parameters in this manner (as the password shows up in clear
      # text in logs, such as the api-proxy log), this is an ArchivesSnake issue
      # that needs to be fixed in that library.
      proxy_pass http://aspace-app:8083/users/$1/login$is_args$args;
    }

    location / {
      if ($http_x_archivesspace_session) {
        # Calls with an "X-ArchivesSpace-Session" header will be passed to the
        # API. The API is responsible for rejecting "bad" session headers
        proxy_pass http://aspace-app:8083;
        break;
      }

      # All other calls without an "X-ArchivesSpace-Session" header return
      # 403 - Forbidden
      return 403;
    }
  }
}
